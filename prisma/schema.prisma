generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String     @id @default(uuid())
  nome             String     @db.VarChar(30)
  email            String     @unique @db.VarChar(30)
  senha            String
  isAdmin          Boolean    @default(false)
  propostasFeitas  Proposta[]
  itensCadastrados Item[]
}

model Item {
  id                   String     @id @default(uuid())
  nome                 String     @db.VarChar(30)
  descricao            String?
  categoria            String     @db.VarChar(30)
  status               String     @default("Disponível")
  foto                 String?   

  usuarioResponsavelId String // Foreign Key para o Usuário responsável pelo item
  usuarioResponsavel   Usuario    @relation(fields: [usuarioResponsavelId], references: [id])

  propostasOfertadas  Proposta[] @relation("ItemOfertado") // Relacionamento com propostas onde este item é ofertado
  propostasDesejadas  Proposta[] @relation("ItemDesejado") // Relacionamento com propostas onde este item é desejado
}

model Proposta {
  id               String   @id @default(uuid())
  status           String   @default("pendente") // Atributo Status da Proposta

  // Relacionamento com o Item que está sendo OFERTADO
  itemOfertado     Item     @relation("ItemOfertado", fields: [itemOfertadoId], references: [id])
  itemOfertadoId   String // Foreign Key para o Item Ofertado

  // Relacionamento com o Item que está sendo DESEJADO
  itemDesejado     Item     @relation("ItemDesejado", fields: [itemDesejadoId], references: [id])
  itemDesejadoId   String // Foreign Key para o Item Desejado

  // Relacionamento com o Usuário que FEZ a proposta
  quemFez          Usuario  @relation(fields: [quemFezId], references: [id])
  quemFezId        String // Foreign Key para o Usuário que fez a proposta
}